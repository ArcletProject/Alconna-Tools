[project]
name = "arclet-alconna-tools"
version = "0.7.3"
description = "Builtin Tools for Alconna"
authors = [
    {name = "RF-Tar-Railt", email = "rf_tar_railt@qq.com"},
]
dependencies = [
    "nepattern<1.0.0,>=0.7.0",
    "arclet-alconna>=1.8.10",
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool]
[tool.pdm]
[tool.pdm.build]
includes = ["src/arclet"]
[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.4.3",
    "coverage>=7.3.2",
    "rich>=13.6.0",
]
[tool.pdm.scripts]
test = "python test.py"

[tool.coverage.run]
branch = true
source = ["."]
omit = ["test.py"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # standard pragma
    "pragma: no cover",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if (typing\\.)?TYPE_CHECKING( is True)?:",
    "\\.\\.\\.",
    "pass",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    # Don't complain overload method / functions
    "@(typing\\.)?overload",
    "def __repr__",
    "def __str__",
    "def __eq__",
    "except ImportError:",
]